// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Miniapi.Migrations
{
    [DbContext(typeof(BoardContext))]
    partial class BoardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("Shared.Board", b =>
                {
                    b.Property<long>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("BoardId");

                    b.ToTable("Board");
                });

            modelBuilder.Entity("Shared.Comment", b =>
                {
                    b.Property<long>("commentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("commentContext")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("postId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("commentid");

                    b.HasIndex("postId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("Shared.Post", b =>
                {
                    b.Property<long>("postId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BoardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("vote")
                        .HasColumnType("INTEGER");

                    b.HasKey("postId");

                    b.HasIndex("BoardId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Shared.Comment", b =>
                {
                    b.HasOne("Shared.Post", null)
                        .WithMany("comments")
                        .HasForeignKey("postId");
                });

            modelBuilder.Entity("Shared.Post", b =>
                {
                    b.HasOne("Shared.Board", null)
                        .WithMany("Post")
                        .HasForeignKey("BoardId");
                });

            modelBuilder.Entity("Shared.Board", b =>
                {
                    b.Navigation("Post");
                });

            modelBuilder.Entity("Shared.Post", b =>
                {
                    b.Navigation("comments");
                });
#pragma warning restore 612, 618
        }
    }
}
